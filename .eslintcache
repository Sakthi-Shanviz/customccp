[{"C:\\Users\\ssakthi8\\pega_ccp\\src\\index.js":"1","C:\\Users\\ssakthi8\\pega_ccp\\src\\App.js":"2","C:\\Users\\ssakthi8\\pega_ccp\\src\\reportWebVitals.js":"3","C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\store.js":"4","C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\action\\metadata.js":"5","C:\\Users\\ssakthi8\\pega_ccp\\src\\pages\\layout\\layout.jsx":"6","C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\initialState.js":"7","C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\action\\index.js":"8","C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\reducer\\index.js":"9","C:\\Users\\ssakthi8\\pega_ccp\\src\\components\\app-header\\app-header.jsx":"10","C:\\Users\\ssakthi8\\pega_ccp\\src\\components\\aws-ccp\\aws-ccp.jsx":"11","C:\\Users\\ssakthi8\\pega_ccp\\src\\components\\app-footer\\app-footer.jsx":"12","C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\action\\contact.js":"13","C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\action\\agent.js":"14","C:\\Users\\ssakthi8\\pega_ccp\\src\\utilities\\ccp-state.js":"15","C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\reducer\\contact.js":"16","C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\reducer\\metadata.js":"17","C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\reducer\\agent.js":"18","C:\\Users\\ssakthi8\\pega_ccp\\src\\utilities\\dataState.js":"19","C:\\Users\\ssakthi8\\pega_ccp\\src\\components\\styled-components\\page-paper.jsx":"20","C:\\Users\\ssakthi8\\pega_ccp\\src\\components\\styled-components\\table-cell.jsx":"21","C:\\Users\\ssakthi8\\pega_ccp\\src\\utilities\\date.js":"22","C:\\Users\\ssakthi8\\pega_ccp\\src\\utilities\\file.js":"23","C:\\Users\\ssakthi8\\pega_ccp\\src\\components\\app-body\\app-body.jsx":"24","C:\\Users\\ssakthi8\\pega_ccp\\src\\utilities\\api.js":"25","C:\\Users\\ssakthi8\\pega_ccp\\src\\components\\app-body\\call-record-menu-color-palette.js":"26"},{"size":500,"mtime":1625917500000,"results":"27","hashOfConfig":"28"},{"size":2286,"mtime":1626177761008,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1625917500000,"results":"30","hashOfConfig":"28"},{"size":427,"mtime":1625917500000,"results":"31","hashOfConfig":"28"},{"size":490,"mtime":1625917500000,"results":"32","hashOfConfig":"28"},{"size":1145,"mtime":1626713973550,"results":"33","hashOfConfig":"28"},{"size":236,"mtime":1626170690254,"results":"34","hashOfConfig":"28"},{"size":1695,"mtime":1625917500000,"results":"35","hashOfConfig":"28"},{"size":303,"mtime":1626170690255,"results":"36","hashOfConfig":"28"},{"size":998,"mtime":1625949423040,"results":"37","hashOfConfig":"28"},{"size":12545,"mtime":1626776241289,"results":"38","hashOfConfig":"28"},{"size":541,"mtime":1626251637888,"results":"39","hashOfConfig":"28"},{"size":188,"mtime":1625917500000,"results":"40","hashOfConfig":"28"},{"size":183,"mtime":1625917500000,"results":"41","hashOfConfig":"28"},{"size":175,"mtime":1625917500000,"results":"42","hashOfConfig":"28"},{"size":402,"mtime":1625917500000,"results":"43","hashOfConfig":"28"},{"size":584,"mtime":1626170690256,"results":"44","hashOfConfig":"28"},{"size":340,"mtime":1625917500000,"results":"45","hashOfConfig":"28"},{"size":140,"mtime":1625917500000,"results":"46","hashOfConfig":"28"},{"size":1577,"mtime":1625917500000,"results":"47","hashOfConfig":"28"},{"size":309,"mtime":1626090830620,"results":"48","hashOfConfig":"28"},{"size":644,"mtime":1625917500000,"results":"49","hashOfConfig":"28"},{"size":483,"mtime":1625917500000,"results":"50","hashOfConfig":"28"},{"size":9202,"mtime":1626782297381,"results":"51","hashOfConfig":"28"},{"size":932,"mtime":1626778443548,"results":"52","hashOfConfig":"28"},{"size":864,"mtime":1626782520464,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"cjaigz",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ssakthi8\\pega_ccp\\src\\index.js",[],["111","112"],"C:\\Users\\ssakthi8\\pega_ccp\\src\\App.js",["113"],"import { Component } from 'react';\r\nimport 'amazon-connect-streams';\r\nimport { Provider as StoreProvider } from 'react-redux';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport store from './redux/store';\r\nimport axios from 'axios';\r\nimport { setInstanceConfig, setAPIConfig, makeAppReady, setAttributeTracing } from './redux/action/metadata';\r\nimport AppBody from \"./components/app-body/app-body\";\r\n\r\nimport Layout from './pages/layout/layout';\r\nimport { Route, Switch } from 'react-router';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nclass App extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            appReady: false\r\n        }\r\n\r\n        this.theme = createMuiTheme({\r\n            palette: {\r\n                primary: {\r\n                    main: '#86bc25',\r\n                    contrastText: '#fff'\r\n                }\r\n            },\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.localStorage.clear();\r\n        navigator.mediaDevices.getUserMedia({ audio: true })\r\n            .then((stream) => { }).catch((err) => { console.error(err) });\r\n        axios.get('/config.json')\r\n            .then(({data}) => {\r\n                store.dispatch(setInstanceConfig(data.connect.instance));\r\n                store.dispatch(setAPIConfig(data.api));\r\n                store.dispatch(makeAppReady());\r\n                this.setState({\r\n                    appReady: true\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <StoreProvider store={store}>\r\n                <ThemeProvider theme={this.theme}>\r\n                    {\r\n                        this.state.appReady && \r\n                        <Router>\r\n                            <Switch>\r\n                                <Route path=\"/app\">\r\n                                    <Layout />\r\n                                </Route>\r\n                                <Route path=\"/view\">\r\n                                    <AppBody />\r\n                                </Route>\r\n                            </Switch>\r\n                        </Router>\r\n                    }\r\n                </ThemeProvider>\r\n            </StoreProvider>\r\n        );\r\n    } \r\n}\r\n\r\nexport default App;","C:\\Users\\ssakthi8\\pega_ccp\\src\\reportWebVitals.js",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\store.js",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\action\\metadata.js",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\pages\\layout\\layout.jsx",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\initialState.js",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\action\\index.js",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\reducer\\index.js",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\components\\app-header\\app-header.jsx",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\components\\aws-ccp\\aws-ccp.jsx",["114"],"import { Component, createRef } from 'react';\r\nimport { RingLoader } from 'react-spinners';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport { LockOpenOutlined } from '@material-ui/icons';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CCPStates from '../../utilities/ccp-state';\r\nimport { storeAgentInfo } from '../../redux/action/agent';\r\nimport { addContact } from '../../redux/action/contact';\r\nimport styles from './aws-ccp.module.sass';\r\n\r\nclass AWSCCPComponent extends Component {\r\n   \r\n    constructor(props) {\r\n        \r\n        super(props)\r\n\r\n        this.ccpStateMessages = {\r\n            [CCPStates.AUTHORIZING]: 'Authorizing Agent',\r\n            [CCPStates.LOGIN_ERROR]: 'Authorization Error',\r\n            [CCPStates.TERMINATED]: 'Agent Logged out'\r\n        }\r\n\r\n        this.state = {\r\n            connectInstanceName: 'test-cf-instance',\r\n            ccpState: CCPStates.AUTHORIZING\r\n        }\r\n\r\n        this.ccpConfig = {\r\n           // ccpUrl:`https://${this.state.connectInstanceName}.awsapps.com/connect/ccp-v2`,\r\n           ccpUrl:`https://pega-custom-ccp.my.connect.aws/connect/ccp-v2`,\r\n            loginPopup: true,\r\n            loginOptions: {\r\n                autoClose: true,\r\n                height: 600,\r\n                width: 400,\r\n                top: 50,\r\n                left: 300\r\n            },\r\n            loginPopupAutoClose: true,\r\n            softphone: {\r\n                allowFramedSoftphone: true\r\n             },\r\n            pageOptions: {\r\n                enableAudioDeviceSettings: true,\r\n                enablePhoneTypeSettings: true \r\n            } \r\n        }\r\n\r\n        this.containerRef = createRef();\r\n\r\n        this.initializeCCP  = this.initializeCCP.bind(this, this.props.setAwsContactsData);\r\n        this.handleAgentLogin = this.handleAgentLogin.bind(this);\r\n        this.handleTermination = this.handleTermination.bind(this);\r\n        this.openLoginPopup = this.openLoginPopup.bind(this);\r\n        this.handleContact = this.handleContact.bind(this);\r\n        this.onCallAccepted = this.onCallAccepted.bind(this);\r\n        this.openLoginPopup = this.openLoginPopup.bind(this);\r\n    }\r\n\r\n    initializeCCP(setAwsContactsData) {\r\n        //var openedWindow;\r\n        this.setState({\r\n            ccpState: CCPStates.AUTHORIZING\r\n        })\r\n        let ele = this.containerRef.current;\r\n        global.connect.core.initCCP(ele, this.ccpConfig);\r\n        \r\n      /*  global.connect.contact((contact) => {\r\n            console.log(\"Contact event\");\r\n            console.log(contact);\r\n        }) */\r\n\r\n        global.connect.contact((_contact) => {\r\n            // console.log(\"Contact event\");\r\n            // console.log(_contact);\r\n\r\n            // _contact.onRefresh(function(contact) { \r\n            //     console.log(\"Contact refreshed\");\r\n            //     console.log(contact)\r\n            //  });\r\n            \r\n            //  _contact.onIncoming(function(contact) { \r\n            //     console.log(\"Contact incoming\");\r\n            //     console.log(contact)\r\n            //  });\r\n            \r\n            //  _contact.onPending(function(contact) { \r\n            //     console.log(\"Contact pending\");\r\n            //  });\r\n\r\n                // _contact.onConnecting(function(contact) { \r\n                //      console.log(\"Contact connecting\");\r\n                //      const AWSContactAttributes = {};\r\n                //      var attributeMap = contact.getAttributes();\r\n                //      AWSContactAttributes.name = JSON.stringify(attributeMap[\"callerid\"][\"value\"]);\r\n                //      AWSContactAttributes.phone = JSON.stringify(attributeMap[\"dnis\"][\"value\"]);\r\n                //      AWSContactAttributes.ani = JSON.stringify(attributeMap[\"ani\"][\"value\"]);\r\n                //      AWSContactAttributes.callbackMemo = JSON.stringify(attributeMap[\"callbackMemo\"][\"value\"]);\r\n                //      AWSContactAttributes.hippaVerification = JSON.stringify(attributeMap[\"hippaVerification\"][\"value\"]);\r\n                //      AWSContactAttributes.beneficiaryId = JSON.stringify(attributeMap[\"beneficiaryId\"][\"value\"]);\r\n                //      window.alert(\"name: \" + AWSContactAttributes.name + \"\\nphone #: \" + AWSContactAttributes.phone + \"\\nCustomer's account #: \" + AWSContactAttributes.ani);\r\n                //      console.log(AWSContactAttributes);\r\n                //      this.props.SetAWSContactAttributes(AWSContactAttributes);\r\n                // });\r\n            \r\n             _contact.onConnecting(async function(contact) { \r\n                console.log(\"Contact connecting\");\r\n                console.log(`onConnected(${contact.getContactId()})`);\r\n                var attributeMap = await contact.getAttributes();\r\n                const requireAttributes = [\"callerId\", \"ani\", \"beneficiaryId\", \"dnis\", \"callbackMemo\", \"hippaVerification\"];\r\n                const data = Object.values(attributeMap)\r\n                    .filter((attr) => requireAttributes.indexOf(attr.name) != -1)\r\n                    .reduce((attributes, currentMap) => {\r\n                        attributes[currentMap.name] = currentMap.value;\r\n                        return attributes;\r\n                    }, {});\r\n\r\n                    data[\"contactId\"] = contact.getContactId();\r\n                console.log(data);\r\n                setAwsContactsData(data);\r\n                // const query = new URLSearchParams();\r\n                // Object.entries(data).forEach(([name, value]) => {\r\n                //     query.append(name, value);\r\n                // });\r\n                // openedWindow = window.open(\"https://localhost:3000/#/view?\" + query.toString(), \"_blank\",\"width=780,height=460,left=50,top=50\");                \r\n             });\r\n            \r\n            //  _contact.onAccepted(function(contact) { \r\n            //     console.log(\"Contact accepted\");\r\n            //     console.log(contact)\r\n            //  });\r\n            \r\n                _contact.onMissed(function(contact) { \r\n                   console.log(\"Contact missed\");\r\n                   console.log(contact);\r\n                  // window.close(); \r\n                  // openedWindow.close();                \r\n                });\r\n            \r\n                _contact.onEnded(function(contact) { \r\n                   console.log(\"Contact ended\");\r\n                   console.log(contact);\r\n                  //window.close();\r\n                 // openedWindow.close();                \r\n               });\r\n            \r\n            //  _contact.onDestroy(function(contact) { \r\n            //     console.log(\"Contact destroyed\");\r\n            //     console.log(contact)\r\n            //  });\r\n            \r\n            //  _contact.onACW(function(contact) { \r\n            //     console.log(\"Contact ACWW\");\r\n            //     console.log(contact)\r\n            //  });\r\n            \r\n            //  _contact.onConnected(function(contact) { \r\n            //     console.log(\"on connected\")\r\n            //     // console.log(`onConnected(${contact.getContactId()})`);\r\n            //     // var attributeMap = contact.getAttributes();\r\n            //     // var caller_id = JSON.stringify(attributeMap[\"caller_id\"][\"value\"]);\r\n            //     // var ani = JSON.stringify(attributeMap[\"ani\"][\"value\"]);                \r\n            //     // console.log(caller_id);\r\n            //     // console.log(ani);\r\n            //     // window.alert(\"Caller ID: \" + caller_id + \"\\nani: \" + ani);\r\n            //  });\r\n\r\n        })\r\n\r\n        // global.connect.agent((_agent) => {\r\n        //     console.log(\"agent event\");\r\n        //     console.log(_agent);\r\n            \r\n        //     _agent.onContactPending(function(agent) { \r\n        //         console.log(\"agent contact pending\");\r\n        //         console.log(agent);\r\n        //      });\r\n            \r\n        //     _agent.onRefresh(function(agent) { \r\n        //         console.log(\"agent refresh\");\r\n        //         console.log(agent);\r\n        //      });\r\n            \r\n        //     _agent.onStateChange(function(agentStateChange) { \r\n        //         console.log(\"agent state change\");\r\n        //         console.log(agentStateChange);\r\n        //      });\r\n            \r\n        //     _agent.onRoutable(function(agent) { \r\n        //         console.log(\"agent routable\");\r\n        //         console.log(agent);\r\n        //      });\r\n            \r\n        //     _agent.onNotRoutable(function(agent) { \r\n        //         console.log(\"agent non routable\");\r\n        //         console.log(agent);\r\n        //      });\r\n            \r\n        //     _agent.onOffline(function(agent) { \r\n        //         console.log(\"agent offline\");\r\n        //         console.log(agent);\r\n        //      });\r\n            \r\n        //     _agent.onError(function(agent) { \r\n        //         console.log(\"agent error\");\r\n        //         console.log(agent);\r\n        //      });\r\n            \r\n        //     _agent.onAfterCallWork(function(agent) { \r\n        //         console.log(\"agent on ACW\");\r\n        //         console.log(agent);\r\n        //      });\r\n\r\n        // })\r\n\r\n        global.connect.agent(this.handleAgentLogin);\r\n        //global.connect.contact(this.handleContact);\r\n        const eventBus = global.connect.core.getEventBus();\r\n        eventBus.subscribe(global.connect.EventType.TERMINATED, this.handleTermination);\r\n    }\r\n\r\n    handleAgentLogin(agent) {\r\n        console.log(\"agent obj\", agent.getConfiguration())\r\n        this.props.storeAgentInfo(agent.getConfiguration());\r\n        this.setState({\r\n            agentConnected: true,\r\n            ccpState: CCPStates.AUHTORIZED\r\n        });\r\n    }\r\n\r\n    handleContact(contact) {\r\n        console.log(\"on\", contact)\r\n        contact.onAccepted(this.onCallAccepted);\r\n    }\r\n\r\n    onCallAccepted(contact) {\r\n        console.log(\"accepted contact id\", contact.contactId)\r\n        this.props.addContact(contact);\r\n    }\r\n\r\n    handleTermination() {\r\n        this.setState({\r\n            agentConnected: false,\r\n            ccpState: CCPStates.TERMINATED\r\n        });\r\n        this.containerRef.current.firstChild.remove();\r\n        const connect = {...global.connect};\r\n        delete global.connect;\r\n        console.log(\"glb connect\", global.connect);\r\n        global.connect = connect;\r\n        console.log(\"glb\", global.connect);\r\n    }\r\n\r\n    openLoginPopup() {\r\n        window.localStorage.clear();\r\n        this.initializeCCP();\r\n        // global.connect.core.loginWindow = new global.connect.PopupManager().open(this.ccpConfig.ccpUrl, global.connect.MasterTopics.LOGIN_POPUP, this.ccpConfig.loginOptions)\r\n        // window.location.reload();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initializeCCP();\r\n        \r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                {\r\n                    this.state.ccpState === CCPStates.AUHTORIZED || (<div className={styles.loader}>\r\n                        <RingLoader\r\n                            color=\"#86bc25\"\r\n                            loading={[CCPStates.AUTHORIZING].includes(this.state.ccpState)}\r\n                        />\r\n                        <Typography variant=\"h6\">{this.ccpStateMessages[this.state.ccpState]}</Typography>\r\n                        {\r\n                            [CCPStates.TERMINATED, CCPStates.LOGIN_ERROR].includes(this.state.ccpState) && \r\n                                <Button\r\n                                    startIcon={<LockOpenOutlined />}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.openLoginPopup}\r\n                                >Login</Button>\r\n                        }\r\n                    </div>)\r\n                }\r\n                <div\r\n                    ref={this.containerRef}\r\n                    className={styles.ccpContainer}\r\n                    style={{opacity: Number(this.state.ccpState === CCPStates.AUHTORIZED)}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        agentInfo: state.agent,\r\n        contact: state.contact\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        storeAgentInfo: (agentInfo) => dispatch(storeAgentInfo(agentInfo)),\r\n        addContact: (contactInfo) => dispatch(addContact(contactInfo))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AWSCCPComponent);","C:\\Users\\ssakthi8\\pega_ccp\\src\\components\\app-footer\\app-footer.jsx",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\action\\contact.js",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\action\\agent.js",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\utilities\\ccp-state.js",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\reducer\\contact.js",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\reducer\\metadata.js",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\redux\\reducer\\agent.js",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\utilities\\dataState.js",[],["115","116"],"C:\\Users\\ssakthi8\\pega_ccp\\src\\components\\styled-components\\page-paper.jsx",[],["117","118"],"C:\\Users\\ssakthi8\\pega_ccp\\src\\components\\styled-components\\table-cell.jsx",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\utilities\\date.js",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\utilities\\file.js",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\components\\app-body\\app-body.jsx",["119","120","121","122","123","124","125"],"C:\\Users\\ssakthi8\\pega_ccp\\src\\utilities\\api.js",[],"C:\\Users\\ssakthi8\\pega_ccp\\src\\components\\app-body\\call-record-menu-color-palette.js",["126"],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":7,"column":57,"nodeType":"133","messageId":"134","endLine":7,"endColumn":76},{"ruleId":"135","severity":1,"message":"136","line":113,"column":76,"nodeType":"137","messageId":"138","endLine":113,"endColumn":78},{"ruleId":"127","replacedBy":"139"},{"ruleId":"129","replacedBy":"140"},{"ruleId":"127","replacedBy":"141"},{"ruleId":"129","replacedBy":"142"},{"ruleId":"131","severity":1,"message":"143","line":2,"column":36,"nodeType":"133","messageId":"134","endLine":2,"endColumn":43},{"ruleId":"131","severity":1,"message":"144","line":2,"column":63,"nodeType":"133","messageId":"134","endLine":2,"endColumn":72},{"ruleId":"131","severity":1,"message":"145","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":19},{"ruleId":"131","severity":1,"message":"146","line":5,"column":10,"nodeType":"133","messageId":"134","endLine":5,"endColumn":21},{"ruleId":"131","severity":1,"message":"147","line":11,"column":7,"nodeType":"133","messageId":"134","endLine":11,"endColumn":16},{"ruleId":"131","severity":1,"message":"148","line":33,"column":13,"nodeType":"133","messageId":"134","endLine":33,"endColumn":17},{"ruleId":"131","severity":1,"message":"149","line":47,"column":13,"nodeType":"133","messageId":"134","endLine":47,"endColumn":21},{"ruleId":"131","severity":1,"message":"150","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'setAttributeTracing' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["151"],["152"],["151"],["152"],"'Divider' is defined but never used.","'TableHead' is defined but never used.","'queryString' is defined but never used.","'createTheme' is defined but never used.","'useStyles' is assigned a value but never used.","'name' is assigned a value but never used.","'response' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]